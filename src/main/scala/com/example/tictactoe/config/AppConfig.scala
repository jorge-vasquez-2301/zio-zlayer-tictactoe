package com.example.tictactoe.config

import zio.config.magnolia._

// No need to define config as a service, just a normal case class
// No need to obtain config from the environment, which means no need to use ZLayer
// No need to pass around config to constructors of services
// You can use HOCON instead of properties files, because nested config is supported
// Integrated into ZIO itself, you just need zio-config-typesafe for being able to read HOCON files
// and zio-config-magnolia for auto-derivation

// However, reports similar to the ones generated by clearconfig are not available for now
final case class AppConfig(
  controller: AppConfig.Controller,
  view: AppConfig.View,
  ai: AppConfig.AI
)
object AppConfig {
  val config = deriveConfig[AppConfig] // Currently this does not support setting default values

  final case class Controller(shutdownMessage: String)

  final case class View(confirm: View.Confirm, game: View.Game, menu: View.Menu)
  object View {
    final case class Confirm(invalidCommandMessage: String)
    final case class Game(invalidCommandMessage: String, fieldOccupiedMessage: String)
    final case class Menu(invalidCommandMessage: String)
  }

  final case class AI(randomGenRepetitions: Int)
}
